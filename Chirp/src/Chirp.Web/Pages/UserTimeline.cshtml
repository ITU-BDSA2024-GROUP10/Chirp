@page "/{author}"
@model Chirp.Web.Pages.UserTimelineModel
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    var routeName = HttpContext.GetRouteValue("author");
}

<div>
    <h2> @Model.NormalizeForDisplay(routeName?.ToString() ?? throw new InvalidOperationException())'s Timeline </h2>

    @if (User.Identity is { IsAuthenticated: true } && string.Equals(User.Identity.Name, routeName.ToString(), StringComparison.CurrentCultureIgnoreCase))
    {
        @await Component.InvokeAsync("SubmitCheep", new { Model.MessageModel, targetPage = $"/{routeName}" })
    }

    @if (Model.Cheeps.Any())
    {
        @await Component.InvokeAsync("PageButtons", new { currentPageNumber = Model.PageNumber, lastPageNumber = Model.LastPageNumber, targetPageUrl = $"/{routeName}" })
        @await Component.InvokeAsync("CheepList", new { cheeps = Model.Cheeps, targetPage = $"/{routeName}" })
    }
    else
    {
        <em>There are no cheeps so far.</em>
    }

    @await Component.InvokeAsync("PageButtons", new { currentPageNumber = Model.PageNumber, lastPageNumber = Model.LastPageNumber, targetPageUrl = $"/{routeName}" })
</div>