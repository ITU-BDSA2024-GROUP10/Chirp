@using Chirp.Core
@using Chirp.Core.DTO
@inject IAuthorService service
@{
    var targetPage = ViewBag.TargetPage as string ?? "";
    IEnumerable<CheepDTO> cheeps = ViewBag.Cheeps;
    Dictionary<string, byte[]> imageMap = ViewBag.ImageMap;
    List<AuthorDTO> Follows = [];
    if (User.Identity!.IsAuthenticated)
    {
        Follows = service.GetFollows(User.Identity!.Name!);
    }
}

<ul id="messagelist" class="cheeps">
    @foreach (var cheep in cheeps)
    {
        <li style ="word-wrap: break-word;">
            <p>
                <strong>
                    <img src="@(imageMap.ContainsKey(cheep.Author) ? $"data:image/png;base64,{Convert.ToBase64String(imageMap[cheep.Author])}" : "/images/chirp-default-profile-blurred.png")" alt="Profile Image" width="50" height="50" />
                    <a href="/@cheep.Author">@cheep.Author</a>
                    @if (User.Identity!.IsAuthenticated && User.Identity!.Name != cheep.Author)
                    {
                        @if (Follows.Any(a => a.Name == cheep.Author))
                        {
                            <button onclick="toggleFollow(this, '@cheep.Author', false)">unfollow</button>
                        }
                        else
                        {
                            <button onclick="toggleFollow(this, '@cheep.Author', true)">follow</button>
                        }
                    }
                </strong>
            </p>
            <p>@cheep.Message</p>
            <small>&mdash; @DateTimeOffset.FromUnixTimeSeconds(cheep.UnixTimestamp).DateTime.ToString("dd/MM/yy H:mm:ss")</small>
        </li>
    }
</ul>